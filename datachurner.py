#A script written for caffe example 2
#Processes all images stored at /home/ash/caffe/examples/images/google
#Outputs processeddata.txt
#Format will be Filename\tType\tPrediction\tAnswer
#Lets you compare the actual file name to the prediction name (pulled from database)

import os
from PIL import Image
import numpy as np
import matplotlib.pyplot as plt

caffe_root = '/home/ash/caffe/'
import sys
sys.path.insert(0, caffe_root + 'python')

import caffe

MODEL_FILE = '/home/ash/caffe/models/bvlc_reference_caffenet/deploy.prototxt'
PRETRAINED = '/home/ash/caffe/models/bvlc_reference_caffenet/bvlc_reference_caffenet.caffemodel'

text_file = open("/home/ash/database.txt", "r")#this file is a copy of caffe/data/ilsvrc12/synset_words.txt
lines = text_file.read().split('\n')
text_file.close()
i=1

f = open("/home/ash/processeddata.txt", "w")#this file is generated by databasecleaner.py
f.write('Filename\tType\tPrediction\tAnswer\n')

mydata = [[0 for x in range(3)] for x in range(len(lines))]
for line in lines:
	mydata[i-1][0]=i
	mydata[i-1][1]=line[10:]
	mydata[i-1][2]=line[:9]
	i=i+1


np.load(caffe_root + 'python/caffe/imagenet/ilsvrc_2012_mean.npy').mean(1).mean(1)

caffe.set_mode_cpu()
net = caffe.Classifier(MODEL_FILE, PRETRAINED)
net.set_raw_scale('data',255)
net.set_channel_swap('data',(2,1,0))
net.set_mean('data',np.load(caffe_root+'python/caffe/imagenet/ilsvrc_2012_mean.npy'))

for filename in os.listdir("/home/ash/caffe/examples/images/google"):
	#to join the file name
    fullname = os.path.join('/home/ash/caffe/examples/images/google',filename)
    img = Image.open(fullname)
    #	
    #	
    IMAGE_FILE = fullname
    input_image = caffe.io.load_image(IMAGE_FILE)
    prediction = net.predict([input_image])#overpredict
    prediction1 = net.predict([input_image], oversample=False)#centerpredict, only looks at the center
    overvalue=prediction[0].argmax()
    centervalue=prediction1[0].argmax()
    #	
    centertrue=overtrue=0
    zero=14-len(filename)#This is to help make all filenames the same sizem easier for viewing
    overname='hi'
    centername='hi'
	#
    for j in range(0,999):#is 999 correct?
        if str(mydata[j][0])==str(overvalue):
            overname=str(mydata[j][1])
            overlocation=str(mydata[j][2])
            overtrue=1
        if str(mydata[j][0])==str(centervalue):
            centername=str(mydata[j][1])
            centerlocation=str(mydata[j][2])
            centertrue=1
        if (centertrue==1)&(overtrue==1):
            break
    f.write(str(overlocation)+'\t')
    f.write((('0'*zero)+filename)+'\tOver\t')
    f.write(str(overvalue)+'\t')
    f.write(overname+'\n')

    f.write(centerlocation+'\t'+('0'*zero)+filename+'\tCenter\t'+str(centervalue)+'\t'+centername+'\n\n')

f.close()
